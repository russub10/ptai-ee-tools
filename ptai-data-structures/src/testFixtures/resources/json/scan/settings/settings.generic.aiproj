{
    // Main Settings

    // Project name i.e. how it will be shown in the PT AI Viewer user interface
    "ProjectName": "JSON-based Maven project",

    // Project main programming language. Valid values are: Java, Php, Csharp,
    // Vb, ObjectiveC, CPlusPlus, Sql, Swift, Python, JavaScript, Kotlin, Go
    "ProgrammingLanguage": "Java",

    // List of PT AI scan engines to be engaged into AST. Valid values are:
    // - Php
    // - Java
    // - CSharp
    // - JavaScript
    // - Configuration
    // - Fingerprint (includes both internal, Yara rules and DependencyCheck scan)
    // - PmTaint
    // - BlackBox
    // If ProgrammingLanguage equals one of Java / Php / Csharp / Vb / JavaScript then
    // including corresponding (CSharp scanAppType covers both Csharp abd Vb programming
    // languages) values into scanApptype will result in engaging language-specific
    // abstract interpretation engine into SAST. Those engines generate
    // results with less false positives, may generate vulnerability check exploits,
    // but require much time to work
    // Configuration - scan engine that checks web- and application server configuration
    // files like web.xml etc. for possible misconfigurations
    // Fingerprint - SCA analysis that uses both internal PT AI's knowledge base, custom
    // Yara rules and DependencyCheck to search for third-party vulnerable components.
    // Due to licensing restrictions DependencyCheck engine used for
    // Java / Python / Ruby / Go / C# / JavaScript and PHP libraries only
    // PmTaint - universal scan engine that supports all the languages and implements
    // pattern matching and taint data flow analysis techniques
    // BlackBox - DAST engine that requires site URL and authentication credentials
    "ScanAppType": "Java, Configuration, Fingerprint, PmTaint",

    // URL of application deployed on a QA site. This URL will be used as an attack target
    // for DAST (BlackBox) engine. Also exploits generated by abstract interpretation
    // engines will include this URL as a target host
    "Site": "http://localhost",

    // As both taint and abstract interpretation engines are highly sensitive to code
    // completeness the code is to be suitable for build and execution i.e. must contain
    // all the required libraries and frameworks.
    // PT AI may automatically download dependencies for projects that use
    // Composer (PHP) / Maven/Gradle (Java) and NuGet (C#)
    "IsDownloadDependencies": true,

    // Enable taint and abstract interpretation engines do data flow analysis starting
    // with not only externally available (entry points) functions, but from any
    // public / protected method
    // This allows to search for vulnerabilities in a code that frameworks aren't supported
    // and to detect potential i.e. not suitable to be currently exploited vulnerabilities
    "IsUsePublicAnalysisMethod": false,

    // Timeout for preprocessing stage in minutes
    "PreprocessingTimeout": 60,

    // Custom analysys parameters
    "CustomParameters": "-upp com.ptsecurity",

    // File extensions to be excluded from scan process. By default PT AI tries to search
    // vulnerabilities in files despite of those types
    "SkipFileFormats": ["*.gif"],

    // Folder names to exclude from scan process
    "SkipFilesFolders": ["\\.git\\", "\\.gitignore", "\\.gitmodules", "\\.gitattributes", "\\$tf\\", "\\$BuildProcessTemplate\\", "\\.tfignore"],

    // As not all the patterns may be applied to any language there's need to
    // define set of disabled patterns. Plugin downloads patterns metadata from PT AI server and automatically sets list of disabled patterns in accordance with programming language. But user may extend this list usind this parameter
    "DisabledPatterns": ["145", "146", "148", "149"],

    // Типы проверок исходных кодов, которые не будут выполняться в ходе анализа
    "DisabledTypes": [],

    // Учитывать результаты предыдущего анализа проекта с тем же именем.
    // Значение true означает, что если в коде по итогам анализа выявлены
    // те же уязвимости, что и при предыдущем анализе, то для них автоматически
    // будут проставлены те же самые статусы подтверждения. Эта опция
    // позволяет сделать процесс анализа сходящимся во времени когда
    // максимальные трудозатраты на разбор уязвимостей приходятся на самые первые
    // итерации анализа
    "ConsiderPreviousScan": true,

    // Hide suspected vulnerabilities by default
    "HideSuspectedVulnerabilities": true,

    // Enable issue tracking integration
    "UseIssueTrackerIntegration": true,

    // Java engine parameters

    // Атрибут, указывающий на необходимость распаковки пользовательских
    // пакетов (используется ядром абстрактной интерпретации Java).
    // Необходимо указать значение true в тех случаях, когда есть необходимость
    // анализа кода в запакованных JAR-архивах. Поскольку в JAR-архивах может
    // находиться не только пользовательский код, но и код сторонних библиотек,
    // при использовании указанного параметра необходимо дополнительно указать
    // префиксы пользовательских пакетов в параметре CustomParameters в виде
    // -upp com.mycompany|com.my.company
    "IsUnpackUserPackages": true,

    // Дополнительные параметры запуска ядра абстрактной интерпретации Java
    "JavaParameters": null,

    // JDK version. 0 for 1.8 and 1 for 1.11
    "JavaVersion": 0,

    // C# engine parameters

    // Тип анализируемого проекта C#. Возможные значения - Solution, WebSite
    "ProjectType": "Solution",

    // Относительный путь к анализируемому проекту/решению C#
    "SolutionFile": "<Path_to_solution>",

    // Путь к каталогу с содержимым сайта C#
    "WebSiteFolder": "<Path_to_webfolder>",

    // JavaScript engine parameters

    // JavaScript application root path
    "JavaScriptProjectFolder": "path_to_dir",

    // PM / Taint engine parameters

    // Use Taint analysis
    "UseTaintAnalysis": false,

    // Use Pattern Matching
    "UsePmAnalysis": true,

    // Disable C#, Java, PHP, JSA cores in analysis
    "DisableInterpretCores": false,

    // Fingerprint engine parameters

    // Ядро анализа уязвимых версий сторонних компонентов использует внутреннюю
    // базу знаний PT AI
    "UseDefaultFingerprints": true,

    // Включить использование пользовательских Yara-правил при работе ядра анализа
    // уязвимых версий сторонних компонентов использует внутреннюю базу знаний PT AI
    "UseCustomYaraRules": false,

    // BlackBox engine parameters

    // Набор проверок ядра динамического анализа (Blackbox).
    // Возможные значения - None, Fast, Normal, Full
    "Level": "Normal",

    // Пользовательские HTTP-заголовки, передаваемые ядром динамического анализа
    "CustomHeaders": [["", ""]],

    // Параметры аутентификации для работы ядра динамического анализа
    "Authentication": {
        "auth_item": {
            "domain": null,
            "credentials": {
                "cookie": null,
                "cookies": null,
                "type": 2,
                "login": {
                    "name": null,
                    "value": null,
                    "regexp": null,
                    "is_regexp": false
                },
                "password": {
                    "name": null,
                    "value": null,
                    "regexp": null,
                    "is_regexp": false
                }
            },
            "test_url": null,
            "form_url": null,
            "form_xpath": ".//form",
            "regexp_of_success": null
        }
    },

    // Параметры прокси-сервера для работы ядра динамического анализа
    "ProxySettings": {
        // Enable proxy usage for BlackBox
        "IsEnabled": false,
        // Proxy ip address
        "Host": null,
        // Proxy port
        "Port": null,
        // Proxy type. Available: 0 or HTTP, 1 or HTTPNOCONNECT, 2 or SOCKS4, 3 or SOCKS5
        "Type": 0,
        // Proxy login
        "Username": null,
        // Proxy password
        "Password": null
    },

    // Autocheck parameters

    // Start vulnerabilities automatic check after scan
    "RunAutocheckAfterScan": false,

    // Адрес веб-приложения, развернутого на тестовой площадке, используемого
    // для автопроверки выявленных уязвимостей
    "AutocheckSite": "http://localhost",
    // Пользовательские HTTP-заголовки, передаваемые при автопроверке выявленных уязвимостей
    "AutocheckCustomHeaders": [["", ""]],
    // Параметры аутентификации, передаваемые при автопроверке выявленных уязвимостей
    "AutocheckAuthentication": {
        "auth_item": {
            "domain": null,
            "credentials": {
                "cookie": null,
                "cookies": null,
                "type": 2,
                "login": {
                    "name": null,
                    "value": null,
                    "regexp": null,
                    "is_regexp": false
                },
                "password": {
                    "name": null,
                    "value": null,
                    "regexp": null,
                    "is_regexp": false
                }
            },
            "test_url": null,
            "form_url": null,
            "form_xpath": ".//form",
            "regexp_of_success": null
        }
    },
    // Параметры прокси-сервера, используемые при автопроверке выявленных уязвимостей
    "AutocheckProxySettings": {
        // Enable proxy usage for Autocheck
        "IsEnabled": false,
        // Proxy ip address
        "Host": null,
        // Proxy port
        "Port": null,
        // Proxy type. Available: 0 or HTTP, 1 or HTTPNOCONNECT, 2 or SOCKS4, 3 or SOCKS5
        "Type": 0,
        // Proxy login
        "Username": null,
        // Proxy password
        "Password": null
    },

    // EMail parameters

    // Отправка e-mail с отчетом по итогам анализа встроенными средствами PT AI
    "SendEmailWithReportsAfterScan": false,
    // Дополнительно архивировать отчет при его отправке по e-mail встроенными
    // средствами PT AI
    "CompressReport": false,

    // Email Parameters
    "EmailSettings": {
        // SMTP server address
        "SmtpServerAddress": "mail.ptsecurity.ru",
        // Login to access mail server
        "UserName": "testagent_wes@ptsecurity.com",
        // Password to access mail server
        "Password": "P@ssw0rd",
        // Recepient address
        "EmailRecipients": "User@ptsecurity.ru",
        // Enable SSL
        "EnableSsl": true,
        // Subject
        "Subject": "Email Title",
        // Consider certificate errors for sending emails
        "ConsiderCertificateError": true,
        // Sender
        "SenderEmail": "testagent_wes@ptsecurity.com"
    },

    // Корневая папка приложения
    "RootFolder": "C:\\TestProject",
    // Папка с анализируемым кодом. В общем случае является подкаталогом по
    // отношению к RootFolder что позволяет сократить время сканирования за
    // счет явного ограничения состава анализируемых файлов и не потерять в
    // качестве анализа благодаря указанию RootFolder, в котором содержится
    // весь код приложения, в т.ч. файлы, от которых зависит код в ScanTarget
    "ScanTarget": "C:\\TestProject",
    // Включить режим поиска от точек входа, реализуемый ядрами абстрактной
    // интерпретации Java/PHP/C#. Позволяет находить уязвимости, которые могут
    // быть использованы злоумышленниками и формировать эксплойты для демонстрации
    "IsUseEntryAnalysisPoint": true,
    // Максимальное время в секундах, выделяемое на анализ одиночного файла
    // ядрами абстрактной интерпретации Java/PHP/C#. При превышении указанного
    // времени анализ файла прерывается с выводом соответствующего сообщения
    "ScanUnitTimeout": 600,
    // Пользовательские правила Yara для ядра анализа уязвимых версий сторонних
    // компонентов
    "CustomYaraRules": ""
}
